#!/usr/bin/env python

Import("env")
Import("env_modules")

env_module = env_modules.Clone()

# Thirdparty source files
thirdparty_obj = []
thirdparty_dir = "thirdparty/"
thirdparty_sources = [
    "stb/stb_vorbis.cpp"
]
thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

# Impl source files
impl_obj = []
impl_dir = "impl/"
impl_sources = [
    "hexwave.cpp",
    "midi.cpp",
    "sf_utils.cpp",
    "sound_font.cpp",
]
impl_sources = [impl_dir + file for file in impl_sources]

env_module.Append(CPPPATH=[thirdparty_dir, impl_dir])

env_thirdparty = env_module.Clone()
env_thirdparty.disable_warnings()
env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources)

env_impl = env_module.Clone()
env_impl.disable_warnings()
env_impl.add_source_files(impl_obj, impl_sources)

env.modules_sources += thirdparty_obj
env.modules_sources += impl_obj

# Godot source files
module_obj = []
env_module.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

# Needed to force rebuilding the module files when the thirdparty library is updated.
env.Depends(module_obj, impl_obj)
env.Depends(impl_obj,thirdparty_obj)
